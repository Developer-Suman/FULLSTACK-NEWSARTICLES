name: Build and Deploy to Remote Server

on:
  push:
    branches:
      - main  # or the branch you want to trigger this workflow

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.x'

      - name: Build and Publish
        run: |
          cd BackEnd
          cd MASTER-PROJECT-IN-LAYERED-ARCHITECTURE-GENERIC-REPOSITORY
          dotnet restore "MASTER-PROJECT-IN-LAYERED-ARCHITECTURE-GENERIC-REPOSITORY.csproj"
          dotnet build "MASTER-PROJECT-IN-LAYERED-ARCHITECTURE-GENERIC-REPOSITORY.csproj" --configuration Release
          dotnet publish "MASTER-PROJECT-IN-LAYERED-ARCHITECTURE-GENERIC-REPOSITORY.csproj" --configuration Release --output ./publish

      - name: List publish directory
        run: |
          cd BackEnd/MASTER-PROJECT-IN-LAYERED-ARCHITECTURE-GENERIC-REPOSITORY
          ls -ltra publish

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: publish
          path: BackEnd/MASTER-PROJECT-IN-LAYERED-ARCHITECTURE-GENERIC-REPOSITORY/publish/

  deploy:
    runs-on: windows-latest
    needs: build

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: publish

    

      - name: Download Plink
        run: |
          Invoke-WebRequest -Uri https://the.earth.li/~sgtatham/putty/latest/w64/plink.exe -OutFile plink.exe

      - name: Set Execution Policy
        run: |
          Set-ExecutionPolicy -ExecutionPolicy Bypass -Scope Process -Force

      - name: Verify SSH Connection
        run: |
          .\plink.exe -pw $env:SSH_PASSWORD -P 22 $env:REMOTE_USER@$env:REMOTE_HOST "echo SSH connection successful" -batch -o StrictHostKeyChecking=no

      - name: Create Folder in the remote server
        run: |
          .\plink.exe -pw $env:SSH_PASSWORD -P 22 $env:REMOTE_USER@$env:REMOTE_HOST "mkdir -p ~/publish" -batch -o StrictHostKeyChecking=no

      - name: List Remote Server folder
        run: |
          .\plink.exe -pw $env:SSH_PASSWORD -P 22 $env:REMOTE_USER@$env:REMOTE_HOST "ls -ltra ~/publish" -batch -o StrictHostKeyChecking=no

      - name: Deploy to server
        run: |
          # Copy files to the remote server
          .\pscp.exe -pw $env:SSH_PASSWORD -P 22 -r BackEnd/MASTER-PROJECT-IN-LAYERED-ARCHITECTURE-GENERIC-REPOSITORY/publish/ $env:REMOTE_USER@$env:REMOTE_HOST:~/publish/ -batch -o StrictHostKeyChecking=no

          # Verify upload
          .\plink.exe -pw $env:SSH_PASSWORD -P 22 $env:REMOTE_USER@$env:REMOTE_HOST "ls -l ~/publish" -batch -o StrictHostKeyChecking=no
