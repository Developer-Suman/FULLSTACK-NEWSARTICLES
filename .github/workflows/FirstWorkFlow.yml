name: Build and Deploy to Remote Server

on:
  push:
    branches:
      - main  # or the branch you want to trigger this workflow

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.x'

      - name: Build and Publish
        run: |
          cd BackEnd
          cd MASTER-PROJECT-IN-LAYERED-ARCHITECTURE-GENERIC-REPOSITORY
          dotnet restore "MASTER-PROJECT-IN-LAYERED-ARCHITECTURE-GENERIC-REPOSITORY.csproj"
          dotnet build "MASTER-PROJECT-IN-LAYERED-ARCHITECTURE-GENERIC-REPOSITORY.csproj" --configuration Release
          dotnet publish "MASTER-PROJECT-IN-LAYERED-ARCHITECTURE-GENERIC-REPOSITORY.csproj" --configuration Release --output ./publish

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: publish
          path: BackEnd/MASTER-PROJECT-IN-LAYERED-ARCHITECTURE-GENERIC-REPOSITORY/publish/

  deploy:
    runs-on: windows-latest
    needs: build

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: publish

      - name: Install SSH Client
        run: |
          choco install openssh

      - name: Verify the Connection To Remote Server
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }} "echo SSH connection successful"

      - name: Create Folder on Remote Server
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }} "mkdir -p ~/publish"

      - name: List Remote Server folder
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }} "ls -ltra ~/publish"

      - name: Deploy to server
        run: |
          scp -r -o StrictHostKeyChecking=no publish/* ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }}:~/publish/

          ssh -o StrictHostKeyChecking=no ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }} "ls -l ~/publish"
